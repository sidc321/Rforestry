% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/forestry.R
\name{multilayer-forestry}
\alias{multilayer-forestry}
\alias{multilayerForestry}
\title{Multilayer forestry}
\usage{
multilayerForestry(
  x,
  y,
  ntree = 500,
  nrounds = 1,
  eta = 0.3,
  replace = FALSE,
  sampsize = nrow(x),
  sample.fraction = NULL,
  mtry = ncol(x),
  nodesizeSpl = 3,
  nodesizeAvg = 3,
  nodesizeStrictSpl = max(round(nrow(x)/128), 1),
  nodesizeStrictAvg = max(round(nrow(x)/128), 1),
  minSplitGain = 0,
  maxDepth = 99,
  splitratio = 1,
  OOBhonest = FALSE,
  doubleBootstrap = if (OOBhonest) TRUE else FALSE,
  seed = as.integer(runif(1) * 1000),
  verbose = FALSE,
  nthread = 0,
  splitrule = "variance",
  middleSplit = TRUE,
  maxObs = length(y),
  linear = FALSE,
  linFeats = 0:(ncol(x) - 1),
  monotonicConstraints = rep(0, ncol(x)),
  groups = NULL,
  monotoneAvg = FALSE,
  featureWeights = rep(1, ncol(x)),
  deepFeatureWeights = featureWeights,
  observationWeights = NULL,
  overfitPenalty = 1,
  doubleTree = FALSE,
  reuseforestry = NULL,
  savable = TRUE,
  saveable = saveable
)
}
\arguments{
\item{x}{A data frame of all training predictors.}

\item{y}{A vector of all training responses.}

\item{ntree}{The number of trees to grow in the forest. The default value is
500.}

\item{nrounds}{Number of iterations used for gradient boosting.}

\item{eta}{Step size shrinkage used in gradient boosting update.}

\item{replace}{An indicator of whether sampling of training data is with
replacement. The default value is TRUE.}

\item{sampsize}{The size of total samples to draw for the training data. If
sampling with replacement, the default value is the length of the training
data. If sampling without replacement, the default value is two-thirds of
the length of the training data.}

\item{sample.fraction}{If this is given, then sampsize is ignored and set to
be round(length(y) * sample.fraction). It must be a real number between 0 and 1}

\item{mtry}{The number of variables randomly selected at each split point.
The default value is set to be one-third of the total number of features of the training data.}

\item{nodesizeSpl}{Minimum observations contained in terminal nodes.
The default value is 5.}

\item{nodesizeAvg}{Minimum size of terminal nodes for averaging dataset.
The default value is 5.}

\item{nodesizeStrictSpl}{Minimum observations to follow strictly in terminal nodes.
The default value is 1.}

\item{nodesizeStrictAvg}{The minimum size of terminal nodes for averaging data set to follow when predicting.
No splits are allowed that result in nodes with observations less than this parameter.
This parameter enforces overlap of the averaging data set with the splitting set when training.
When using honesty, splits that leave less than nodesizeStrictAvg averaging
observations in either child node will be rejected, ensuring every leaf node
also has at least nodesizeStrictAvg averaging observations. The default value is 1.}

\item{minSplitGain}{Minimum loss reduction to split a node further in a tree.}

\item{maxDepth}{Maximum depth of a tree. The default value is 99.}

\item{splitratio}{Proportion of the training data used as the splitting dataset.
It is a ratio between 0 and 1. If the ratio is 1 (the default), then the splitting
set uses the entire data, as does the averaging set---i.e., the standard Breiman RF setup.
If the ratio is 0, then the splitting data set is empty, and the entire dataset is used
for the averaging set (This is not a good usage, however, since there will be no data available for splitting).}

\item{OOBhonest}{In this version of honesty, the out-of-bag observations for each tree
are used as the honest (averaging) set. This setting also changes how predictions
are constructed. When predicting for observations that are out-of-sample
(using Predict(..., aggregation = "average")), all the trees in the forest
are used to construct predictions. When predicting for an observation that was in-sample (using
predict(..., aggregation = "oob")), only the trees for which that observation
was not in the averaging set are used to construct the prediction for that observation.
aggregation="oob" (out-of-bag) ensures that the outcome value for an observation
is never used to construct predictions for a given observation even when it is in sample.
This property does not hold in standard honesty, which relies on an asymptotic subsampling argument.}

\item{doubleBootstrap}{The doubleBootstrap flag provides the option to resample
with replacement from the out-of-bag observations set for each tree to construct
the averaging set when using OOBhonest. If this is FALSE, the out-of-bag observations
are used as the averaging set. By default this option is TRUE when running OOBhonest = TRUE.
This option increases diversity across trees.}

\item{seed}{random seed}

\item{verbose}{Indicator to train the forest in verbose mode}

\item{nthread}{Number of threads to train and predict the forest. The default
number is 0 which represents using all cores.}

\item{splitrule}{Only variance is implemented at this point and it
specifies the loss function according to which the splits of random forest
should be made.}

\item{middleSplit}{Indicator of whether the split value is takes the average of two feature
values. If FALSE, it will take a point based on a uniform distribution
between two feature values. (Default = FALSE)}

\item{maxObs}{The max number of observations to split on.}

\item{linear}{Indicator that enables Ridge penalized splits and linear aggregation
functions in the leaf nodes. This is recommended for data with linear outcomes.
For implementation details, see: https://arxiv.org/abs/1906.06463. Default is FALSE.}

\item{linFeats}{A vector containing the indices of which features to split
linearly on when using linear penalized splits (defaults to use all numerical features).}

\item{monotonicConstraints}{Specifies monotonic relationships between the continuous
features and the outcome. Supplied as a vector of length p with entries in
1,0,-1 which 1 indicating an increasing monotonic relationship, -1 indicating
a decreasing monotonic relationship, and 0 indicating no constraint.
Constraints supplied for categorical variable will be ignored.}

\item{groups}{A vector of factors specifying the group membership of each training ovbservation.
these groups are used in the aggregation when doing out of bag predictions in
order to predict with only trees where the entire group was not used for aggregation.
This allows the user to specify custom subgroups which will be used to create
predictions which do not use any data from a common group to make predictions for
any observation in the group. This can be used to create general custom
resampling schemes, and provide predictions consistent with the Out-of-Group set.}

\item{monotoneAvg}{This is a boolean flag that indicates whether or not monotonic
constraints should be enforced on the averaging set in addition to the splitting set.
This flag is meaningless unless both honesty and monotonic constraints are in use.
The default is FALSE.}

\item{featureWeights}{weights used when subsampling features for nodes above or at interactionDepth.}

\item{deepFeatureWeights}{weights used when subsampling features for nodes below interactionDepth.}

\item{observationWeights}{Denotes the weights for each training observation
that determine how likely the observation is to be selected in each bootstrap sample.
This option is not allowed when sampling is done without replacement.}

\item{overfitPenalty}{Value to determine how much to penalize the magnitude
of coefficients in ridge regression when using linear splits.}

\item{doubleTree}{if the number of tree is doubled as averaging and splitting
data can be exchanged to create decorrelated trees. (Default = FALSE)}

\item{reuseforestry}{Pass in an `forestry` object which will recycle the
dataframe the old object created. It will save some space working on the
same data set.}

\item{savable}{If TRUE, then RF is created in such a way that it can be
saved and loaded using save(...) and load(...). However, setting it to TRUE
(default) will take longer and use more memory. When
training many RF, it makes sense to set this to FALSE to save time and memory.}

\item{saveable}{deprecated. Do not use.}
}
\value{
A `multilayerForestry` object.
}
\description{
Construct a gradient boosted ensemble with random forest base learners.
}
